<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <RootNamespace>WorldDoomLeague.WebUI</RootNamespace>
    <AssemblyName>WorldDoomLeague.WebUI</AssemblyName>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>true</IsPackable>
    <!--<IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>-->

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="5.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.3" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="5.0.3" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.2.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="5.0.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="NSwag.AspNetCore" Version="13.10.7" />
    <PackageReference Include="NSwag.MSBuild" Version="13.10.7">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Remove="bin\**" />
        <Content Remove="ClientApp\build\**" />
        <Content Remove="obj\**" />
        <None Remove="$(SpaRoot)**" />
        <None Remove="bin\**" />
        <None Remove="ClientApp\build\**" />
        <None Remove="obj\**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
      <Compile Remove="bin\**" />
      <Compile Remove="ClientApp\build\**" />
      <Compile Remove="obj\**" />
      <EmbeddedResource Remove="bin\**" />
      <EmbeddedResource Remove="ClientApp\build\**" />
      <EmbeddedResource Remove="obj\**" />
      <TypeScriptCompile Remove="bin\**" />
      <TypeScriptCompile Remove="ClientApp\build\**" />
      <TypeScriptCompile Remove="ClientApp\node_modules\**" />
      <TypeScriptCompile Remove="obj\**" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="ClientApp\build\asset-manifest.json" />
      <None Remove="ClientApp\build\favicon.ico" />
      <None Remove="ClientApp\build\index.html" />
      <None Remove="ClientApp\build\manifest.json" />
      <None Remove="ClientApp\build\precache-manifest.f44bd5c16ebc09539f42581920819ebe.js" />
      <None Remove="ClientApp\build\service-worker.js" />
      <None Remove="ClientApp\build\static\css\2.d6500151.chunk.css" />
      <None Remove="ClientApp\build\static\css\2.d6500151.chunk.css.map" />
      <None Remove="ClientApp\build\static\css\main.6636e503.chunk.css" />
      <None Remove="ClientApp\build\static\css\main.6636e503.chunk.css.map" />
      <None Remove="ClientApp\build\static\js\2.bed1da42.chunk.js" />
      <None Remove="ClientApp\build\static\js\2.bed1da42.chunk.js.LICENSE.txt" />
      <None Remove="ClientApp\build\static\js\2.bed1da42.chunk.js.map" />
      <None Remove="ClientApp\build\static\js\main.2369d941.chunk.js" />
      <None Remove="ClientApp\build\static\js\main.2369d941.chunk.js.map" />
      <None Remove="ClientApp\build\static\js\runtime-main.8746a0cd.js" />
      <None Remove="ClientApp\build\static\js\runtime-main.8746a0cd.js.map" />
      <None Remove="ClientApp\src\AdminMenu.tsx" />
      <None Remove="ClientApp\src\ApiClientBase.ts" />
      <None Remove="ClientApp\src\client.extensions.ts" />
      <None Remove="ClientApp\src\components\admin\AdminRoutes.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\AddPlayers.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\AddTeams.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\CreateGames.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\CreateWeeks.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\EngineList.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\MapList.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\NewSeasonWizard.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\PlayerList.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\RegisterDraft.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\SeasonBasics.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\SeasonList.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\StepButtons.tsx" />
      <None Remove="ClientApp\src\components\admin\newseasonwizard\WadList.tsx" />
      <None Remove="ClientApp\src\components\admin\processgamewizard\ProcessGameWizard.tsx" />
      <None Remove="ClientApp\src\components\LeaderboardAllTimeStats.tsx" />
      <None Remove="ClientApp\src\ErrorResponse.tsx" />
      <None Remove="ClientApp\src\reportWebVitals.ts" />
      <None Remove="ClientApp\src\state.tsx" />
    </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Remove="ClientApp\src\components\api-authorization\Roles.tsx" />
      <TypeScriptCompile Remove="ClientApp\src\components\home\NewsBlog.tsx" />
      <TypeScriptCompile Remove="ClientApp\src\components\home\TeamResults.tsx" />
      <TypeScriptCompile Remove="ClientApp\src\components\home\TwitchIntegration.tsx" />
      <TypeScriptCompile Remove="ClientApp\src\components\home\UpcomingMatches.tsx" />
    </ItemGroup>

    <ItemGroup>
    <ProjectReference Include="..\Application\Application.csproj" />
    <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
  </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Update="ClientApp\src\components\admin\newseasonwizard\AddPlayers.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
      <TypeScriptCompile Update="ClientApp\src\components\admin\newseasonwizard\AddTeams.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
      <TypeScriptCompile Update="ClientApp\src\components\admin\newseasonwizard\CreateGames.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
      <TypeScriptCompile Update="ClientApp\src\components\admin\newseasonwizard\CreateWeeks.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
      <TypeScriptCompile Update="ClientApp\src\components\admin\newseasonwizard\EngineList.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
      <TypeScriptCompile Update="ClientApp\src\components\admin\newseasonwizard\MapList.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
      <TypeScriptCompile Update="ClientApp\src\components\admin\newseasonwizard\PlayerList.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
      <TypeScriptCompile Update="ClientApp\src\components\admin\newseasonwizard\RegisterDraft.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
      <TypeScriptCompile Update="ClientApp\src\components\admin\newseasonwizard\WadList.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
      <TypeScriptCompile Update="ClientApp\src\components\admin\processgamewizard\ProcessGameWizard.tsx">
        <SubType>Code</SubType>
      </TypeScriptCompile>
    </ItemGroup>

    <ItemGroup>
      <Folder Include="wwwroot\images\" />
    </ItemGroup>

    <ItemGroup>
      <None Update="ClientApp\src\components\admin\newseasonwizard\AddTeams - Copy %282%29.js">
        <DependentUpon>AddTeams.js</DependentUpon>
      </None>
      <None Update="ClientApp\src\components\admin\newseasonwizard\AddTeams - Copy %282%29.js.map">
        <DependentUpon>AddTeams.js.map</DependentUpon>
      </None>
      <None Update="ClientApp\src\components\admin\newseasonwizard\AddTeams - Copy - Copy.js">
        <DependentUpon>AddTeams - Copy.js</DependentUpon>
      </None>
      <None Update="ClientApp\src\components\admin\newseasonwizard\AddTeams - Copy - Copy.js.map">
        <DependentUpon>AddTeams - Copy.js.map</DependentUpon>
      </None>
      <None Update="ClientApp\src\components\admin\newseasonwizard\AddTeams - Copy.js">
        <DependentUpon>AddTeams.js</DependentUpon>
      </None>
      <None Update="ClientApp\src\components\admin\newseasonwizard\AddTeams - Copy.js.map">
        <DependentUpon>AddTeams.js.map</DependentUpon>
      </None>
    </ItemGroup>

  <Target Name="NSwag" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug'">
    <Copy SourceFiles="@(Reference)" DestinationFolder="$(OutDir)References" />
    <Exec Command="$(NSwagExe_Net50) run /variables:Configuration=$(Configuration)" />
    <RemoveDir Directories="$(OutDir)References" />
  </Target>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
    
</Project>
